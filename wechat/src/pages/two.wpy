<style lang="less">
.cir {
  display: flex;
  border: 1px solid black;
  border-radius: 50%;
  height: 4rem;
  width: 4rem;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
  box-shadow: 0px 0px 35px 0px rgba(220,220,220,70%);
}

.userinfo-nickname {
  color: #aaa;
}

.userinfo {
  display: flex;
  flex-direction: column;
  padding-top: 2rem;
}

.row {
  display: flex;
  flex-direction: row;
}

.out {
  display: flex;
  border: 1px solid whitesmoke;
  border-radius: 5px;
  height: 3.3rem;
  width: 19rem;
  background-color: white;
  align-items: center;
  // padding-left: 0.8rem;
}

.center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.choice {
  margin-top: 4.5rem;
}

.everychoice {
  margin-top: 1rem;
}

.space {
  height: 10.66rem;
  width: 20rem;
}

.background {
  background-color: #f4f5f7;
}

.mar {
  margin-top: 30px;
}

.word {
  font-size: 0.9rem;
  margin-left: 0.8rem;
  width: 6rem;
}

.avatarUrl {
  height: 4rem;
  width: 4rem;
}

.point {
  margin-left: 10.5rem;
  height: 1.3rem;
  width: 1.5rem;
}
.name {
  margin-top: 0.8rem;
}
.absolute {
  display: flex;
  position: absolute;
  top: 10rem;
  right: 3rem;
  height: 13rem;
  width: 14rem;
  background-color: lightgray;
  border-radius: 15px;
}
.button {
  height: 1rem;
  width: 4rem;
  border: 1px solid black;
  margin-top: 1rem;
  border-radius: 10px;
}
.input {
  height: 1.5rem;
  width: 8rem;
  border: 1px solid black;
  margin-top: 1rem;
  margin-bottom: 0.8rem;
  border-radius: 10px;
}
</style>
<template>
  <view style="height: {{height}}px; width:{{width}}px;" class="background">
    <view class="center userinfo">
      <view class="cir center">
        <image class="userinfo-avatar avatarUrl" src="{{ avatarUrl }}" />
      </view>
      <view class="userinfo-nickname center name">{{ nickName }}</view>
    </view>
    <view class="center choice">
      <view class="out" @tap="missing">
        <text class="word">纪念日</text>
        <image src="{{point}}" class="point"></image>
      </view>
      <view class="out everychoice" @tap="photo">
        <text class="word">照片集</text>
        <image src="{{point}}" class="point"></image>
      </view>
      <view class="out" @tap="memory">
        <text class="word">回忆集</text>
        <image src="{{point}}" class="point"></image>
      </view>
      <view class="out" @tap="TA">
        <text class="word">关联TA</text>
        <image src="{{point}}" class="point"></image>
      </view>
    </view>
    <view wx:if="{{showmodel}}">
      <view class="absolute center">
        <!-- <image src="{{cancel}}" biantap="cancel"></image> -->
        <view>请完整输入对方的微信名</view>
        <input class="input" bindinput="input"></input>
        <view style="display:flex;flex-direction:row;width:12rem" class="center">
          <view class="button center" @tap="cancel" style="margin-right: 1.5rem">取消</view>
          <view class="button center" @tap="verify">确定</view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class Two extends wepy.page {
  config = {
    navigationBarTitleText: '小情书'
  }
  data = {
    src: '',
    nickName: '',
    avatarUrl: '',
    point: '../images/point.png',
    height: '',
    width: '',
    showmodel: false,
    input: '',
    anotherlength: '',
    another: ''
    // cancel: '../images/cancel.png'
  }
  methods = {
    missing() {
      wepy.navigateTo({
        url: './missing'
      })
    },
    photo() {
      wepy.navigateTo({
        url: './photo'
      })
    },
    memory() {
      wepy.navigateTo({
        url: './showmemory'
      })
    },
    TA() {
      let self = this
      self.showmodel = true
    },
    input(e) {
      let self = this
      self.input = e.detail.value
    },
    cancel() {
      let self = this
      self.showmodel = false
    },
    verify() {
      let self = this
      wepy.request({
        url: 'http://127.0.0.1:7001/temporaryinsert',
        data: {
          wechat: self.nickName,
          anthor: self.input
        },
        method: 'POST',
        success: function(res) {
        }
      })
      wepy.request({
        url: 'http://127.0.0.1:7001/temporaryselect',
        data: {
          wechat: self.input
        },
        method: 'POST',
        success: function(res) {
          self.anotherlength = res.data.length
          self.setData({
            anotherlength: res.data.length
          })
          console.log(self.anotherlength)
          if (self.anotherlength === 0) {
            wepy.showModal({
              title: '提示',
              content: '他还没有使用奥',
              showCancel: false
            })
          } else {
            wepy.request({
              url: 'http://127.0.0.1:7001/temporaryselect',
              data: {
                wechat: self.input
              },
              method: 'POST',
              success: function(res) {
                self.another = res.data[0].anthor
                self.setData({
                  another: res.data[0].anthor
                })
                if (self.another === '') {
                  wepy.showModal({
                    title: '提示',
                    content: '他还没有添加你奥',
                    showCancel: false
                  })
                } else {
                  if (self.another === self.nickName) {
                    wepy.showModal({
                      title: '成功',
                      content: '添加成功',
                      showCancel: false
                    })
                  } else {
                    wepy.showModal({
                      title: '提示',
                      content: '对方添加的不是你',
                      showCancel: false
                    })
                  }
                }
              }
            })
          }
          wepy.request({
            url: 'http://127.0.0.1:7001/user',
            data: {
              wechat: self.nickName,
              anthor: self.input
            },
            method: 'POST',
            success: function(res) {
              console.log(self.input, 'input')
            }
          })
        }
      })
    }
  }
  async onLoad() {
    let self = this
    await wepy.getUserInfo({
      success: function(res) {
        self.nickName = res.userInfo.nickName
        self.avatarUrl = res.userInfo.avatarUrl
        self.setData({
          nickName: res.userInfo.nickName,
          avatarUrl: res.userInfo.avatarUrl
        })
      }
    })
    wepy.getSystemInfo({
      success(res) {
        self.height = res.windowHeight
        self.width = res.windowWidth
      }
    })
  }
}
</script>
