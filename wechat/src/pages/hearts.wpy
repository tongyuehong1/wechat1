<style lang="less">
.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.row {
  display: flex;
  flex-direction: row;
}

.top {
  border: 1px solid white;
  background-color: #f4f5f7;
  border-radius: 1.6rem;
  height: 2rem;
  width: 6rem;
  font-size: 0.8rem;
  margin-top: 0.8rem;
}

.line {
  border-right: 1px solid gray;
  height: 1.2rem;
}

.flex {
  flex: 1;
}

.addborder {
  display: flex;
  // border: 0.5px solid gray;
  border-radius: 0.5rem;
  height: 7.5rem;
  width: 5.5rem;
  background-color: #f4f5f7;
  // margin-right: 0.8rem;
}

.add {
  height: 2.5rem;
  width: 2.5rem;
}
.second {
  height: 100%;
  width: 18rem;
  margin-top: 1rem;
}
.image {
  height: 7.5rem;
  width: 5.5rem;
  border: 1px solid white;
  border-radius: 0.5rem;
}
.avg {
  display: flex;
  justify-content: space-between;
}
.word {
  display: flex;
  font-size: 0.7rem;
  // margin-left: 0.5rem;
  justify-content: center;
  align-items: center;
}
.rowline {
  border-top: 1px solid #f4f5f7;
}
.receive {
  margin-right: 1rem;
}
.third {
  display: flex;
  margin-top: 1rem;
  width:90%;
}
.receiveimg {
  height:7.5rem;
  width:5.5rem;
  margin-bottom:1.5rem;
  margin-right: 0.2rem;
  margin-left: 0.2rem;
}
// .try{
//   display: -webkit-box;
//   word-break: break-all;
//   text-overflow: ellipsis;
//   overflow: hidden;
//   -webkit-box-orient: vertical;
//   -webkit-line-clamp:1;
// }
</style>
<template>
  <view>
    <view class="rowline"></view>
    <view style="height: {{height}}px;width:{{width}}px">
    <view class="center">
      <view class="top row center">
        <view class="flex center">
          <view style="color: {{writecolor}};" bindtap="write">写信</view>
        </view>
        <view class="line"></view>
        <view class="flex center">
          <view style="color: {{sendcolor}};" bindtap="receive">收信</view>
        </view>
      </view>
    </view>
    <view wx:if="{{show}}" class="center">
      <view class="row second" style="display:flex; flex-wrap: wrap;">
        <view class="addborder center" bindtap="letter" style="margin-left:0.2rem;margin-right:0.2rem">
          <image class="add" src="{{add}}"></image>
        </view>
        <view wx:for="{{text}}" wx:key="index" id="{{index}}" bindtap="second" class="receiveimg">
          <view class="image">
            <image class="image" src="{{item.img}}"></image>
            <view class="word try">{{item.title}}</view>
          </view>
        </view>
      </view>
    </view>
    <view wx:else class="center">
      <view class="row third" style="display:flex; flex-wrap: wrap;">
        <view wx:for="{{receive}}" wx:key="index" id="{{index}}" bindtap="receiveletter" class="receiveimg">
            <view class="image">
              <image class="image" src="{{item.img}}"></image>
              <view class="word">{{item.title}}</view>
            </view>
          </view>
      </view>
    </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class Hearts extends wepy.page {
  config = {
    navigationBarTitleText: '小情书'
  }
  data = {
    src: '',
    writecolor: 'black',
    sendcolor: 'gray',
    add: '../images/addletter.png',
    cat: '../images/cat.jpg',
    plant: '../images/plant.jpg',
    show: true,
    myessay: '',
    nickName: '',
    text: '',
    index: '',
    another: '',
    anotherone: '',
    height: 0,
    width: 0
  }
  methods = {
    write() {
      let self = this
      self.writecolor = 'black'
      self.sendcolor = 'gray'
      self.show = true
    },
    receive() {
      let self = this
      self.writecolor = 'gray'
      self.sendcolor = 'black'
      self.show = false
    },
    letter() {
      wepy.navigateTo({
        url: './letter'
      })
    },
    second(e) {
      let self = this
      self.index = e.currentTarget.id
      wepy.navigateTo({
        url: `./second?index=${self.index}`
      })
    },
    receiveletter(e) {
      let self = this
      self.index = e.currentTarget.id
      wepy.navigateTo({
        url: `./receiveletter?index=${self.index}&wechat=${self.anotherone}`
      })
    }
  }
  onShow() {
    let self = this
    wepy.getSystemInfo({
      success(res) {
        self.height = res.windowHeight
        self.width = res.windowWidth
      }
    })
    wepy.getUserInfo({
      success: async function(res) {
        self.nickName = res.userInfo.nickName
        self.avatarUrl = res.userInfo.avatarUrl
        await wepy.request({
          url: 'http://127.0.0.1:7001/hearts/list',
          method: 'POST',
          data: {
            wechat: self.nickName
          },
          success: function(res) {
            self.text = res.data
            self.setData({
              text: res.data
            })
          }
        })
      }
    })
    wepy.getUserInfo({
      success: async function(res) {
        self.nickName = res.userInfo.nickName
        self.avatarUrl = res.userInfo.avatarUrl
        await wepy.request({
          url: 'http://127.0.0.1:7001/hearts/selectanother',
          method: 'POST',
          data: {
            wechat: self.nickName
          },
          success: function(res) {
            self.another = res.data
            self.setData({
              another: res.data
            })
            self.anotherone = self.another[0].anthor
            wepy.getUserInfo({
              success: async function(res) {
                self.nickName = res.userInfo.nickName
                self.avatarUrl = res.userInfo.avatarUrl
                await wepy.request({
                  url: 'http://127.0.0.1:7001/hearts/anotherlist',
                  method: 'POST',
                  data: {
                    wechat: self.anotherone
                  },
                  success: function(res) {
                    self.receive = res.data
                    self.setData({
                      receive: res.data
                    })
                  }
                })
              }
            })
          }
        })
      }
    })
  }
}
</script>
