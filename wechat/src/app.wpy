<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/hearts',
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: 'pink',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      list: [{
        pagePath: 'pages/index',
        color: '#000000',
        selectedColor: '#808080',
        backgroundColor: #ffc0cb,
        iconPath: './images/book.png',
        selectedIconPath: './images/booktwo.png',
        text: '攻略'
      }, {
        pagePath: 'pages/hearts',
        color: '#000000',
        selectedColor: #808080,
        backgroundColor: '#ffc0cb',
        iconPath: './images/hearts.png',
        selectedIconPath: './images/hearttwo.png',
        text: '小情书'
      }, {
        pagePath: 'pages/two',
        color: '#000000',
        selectedColor: '#808080',
        backgroundColor: #ffc0cb,
        iconPath: './images/two.png',
        selectedIconPath: './images/twotwo.png',
        text: '我们'
      }]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor() {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
